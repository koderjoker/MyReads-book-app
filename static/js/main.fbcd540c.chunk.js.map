{"version":3,"sources":["components/Book.js","components/Shelf.js","BooksAPI.js","components/Home.js","components/Search.js","App.js","index.js"],"names":["Book","_this","this","react_default","a","createElement","className","style","width","height","backgroundImage","concat","props","book","imageLinks","thumbnail","value","shelf","onChange","event","changeShelf","target","disabled","title","authors","join","React","Component","Shelf","heading","books","map","components_Book","key","id","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","method","Object","objectSpread","Content-Type","body","JSON","stringify","Home","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","shiftedBook","newShelf","BooksAPI","response","newBookDisplay","state","bookDisplay","setState","_this2","components_Shelf","filter","Link","to","Search","searchResults","query","newQuery","_this3","undefined","error","items","forEach","index","shelvedBook","_this4","type","placeholder","searchBook","BooksApp","Route","exact","path","component","ReactDOM","render","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fbcd540c.chunk.js","sourcesContent":["// Make react usable\nimport React from 'react';\n\n// Component Book\nclass Book extends React.Component {\n\n  render() {\n    return (\n      <li>\n        <div className=\"book\">\n          <div className=\"book-top\">\n            <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: `url(\"${ this.props.book.imageLinks ? this.props.book.imageLinks.thumbnail : \"\"}\")`}}></div>\n            <div className=\"book-shelf-changer\">\n              {/*Shelf value sent as book prop for shelf status. If value is changed call changeShelf and send book and new select menu value as params*/}\n              <select value={this.props.book.shelf ? this.props.book.shelf : 'none'} onChange={(event) => {this.props.changeShelf(this.props.book, event.target.value);}}>\n                <option value=\"move\" disabled>Move to...</option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"book-title\">{ this.props.book.title ? this.props.book.title: 'Untitled'}</div>\n          <div className=\"book-authors\">{ this.props.book.authors ? this.props.book.authors.join(', ') : 'No author listed'}</div>\n        </div>\n      </li>\n    );\n  }\n}\n\n// named export\nexport default Book;\n","import React from 'react';\n\n// Import Book components\nimport Book from './Book'\n\n// Component Shelf\nclass Shelf extends React.Component {\n  render() {\n    return (\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">{this.props.heading}</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {/*Send book and key as props to the Book component (Use key for list items as mentioned in documentation)*/}\n            { this.props.books.map((book) => <Book changeShelf={this.props.changeShelf} book={book} key={book.id} />) }\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// named export\nexport default Shelf;\n","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\n// Get books from API\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","// Make react usable\nimport React from 'react';\n\n// Import Shelf components\nimport Shelf from './Shelf'\n\n// Use API\nimport * as BooksAPI from '../BooksAPI'\n\n// Import react-router-dom\nimport { Link } from 'react-router-dom'\n\n// Component Home\nclass Home extends React.Component {\n\n  // Invoked before component is mounted\n  constructor(props) {\n    super(props);\n    // Object to store list of books\n    this.state = { bookDisplay: [] }\n  }\n\n  // Invoked after a component is mounted\n  componentDidMount() {\n    // Call API for book listing\n    BooksAPI.getAll().then(response => {\n      // Re render when component changes\n      this.setState({ bookDisplay: response });\n    })\n  }\n\n  // Change book shelf\n  changeShelf = (shiftedBook, newShelf) => {\n    // Call API for book and its new shelf\n    BooksAPI.update(shiftedBook, newShelf).then(response => {\n      // Assign its new shelf to it\n      shiftedBook.shelf = newShelf;\n      // Save new state\n      let newBookDisplay = this.state.bookDisplay\n      // Set new state\n      this.setState({ bookDisplay: newBookDisplay })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n          <div>\n            {/*Filter book for each shelf based on shelf and send to shelf component*/}\n            <Shelf heading=\"Currently reading\" books={ this.state.bookDisplay.filter(book => book.shelf === \"currentlyReading\") } changeShelf={this.changeShelf}/>\n            <Shelf heading=\"Want to read\" books={ this.state.bookDisplay.filter(book => book.shelf === \"wantToRead\") } changeShelf={this.changeShelf}/>\n            <Shelf heading=\"Read\" books={ this.state.bookDisplay.filter(book => book.shelf === \"read\") } changeShelf={this.changeShelf}/>\n          </div>\n        </div>\n\n        {/*Link to Search.js*/}\n        <Link to=\"/search\">\n        <div className=\"open-search\">\n          <button>Add a book</button>\n        </div>\n        </Link>\n\n      </div>\n    );\n  }\n}\n\n// named export\nexport default Home;\n","// Make react usable\nimport React from 'react';\n\n// Use API\nimport * as BooksAPI from '../BooksAPI'\n\n// Import Book components\nimport Book from './Book'\n\n// Import react-router-dom\nimport { Link } from 'react-router-dom'\n\n// Component Search\nclass Search extends React.Component {\n\n    // Invoked before component is mounted\n    constructor(props) {\n      super(props);\n      this.state = { bookDisplay: [], searchResults: [], query: '' }\n    }\n\n    // Invoked after a component is mounted\n    componentDidMount() {\n      // Call API for book listing\n      BooksAPI.getAll().then(response => {\n        // Re render when component changes\n        this.setState({ bookDisplay: response });\n      })\n    }\n\n    // Change book shelf\n    changeShelf = (shiftedBook, newShelf) => {\n      // Call API for book and its new shelf\n      BooksAPI.update(shiftedBook, newShelf).then(response => {\n        // Assign its new shelf to it\n        shiftedBook.shelf = newShelf;\n        // Save new state\n        let newBookDisplay = this.state.bookDisplay\n        // Set new state\n        this.setState({ bookDisplay: newBookDisplay })\n      })\n    }\n\n    // Check query and display search results\n    searchBook(newQuery) {\n      this.setState({ query: newQuery });\n      // No search results if empty string or undefined or null\n      if(this.state.query === '' || this.state.query === undefined || this.state.query === null) {\n        return this.setState({ searchResults: [] });\n      }\n      BooksAPI.search(this.state.query).then(response => {\n        // If response has properties error and items clear search results\n        if(response.error && response.items) {\n          return this.setState({ searchResults: [] });\n        }\n        // Loop through search results, if preexisting on home page make sure it has same shelf\n        else {\n          response.forEach((book,index) => {\n            this.state.bookDisplay.forEach((shelvedBook) => {\n              if (book.id === shelvedBook.id) {\n                book.shelf = shelvedBook.shelf\n              }\n            })\n          })\n          return this.setState({ searchResults: response });\n        }\n      });\n    }\n\n  render() {\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n        {/*Link back to Home*/}\n        <Link to=\"/\"><button className=\"close-search\">Close</button></Link>\n          <div className=\"search-books-input-wrapper\">\n          {/* The BooksAPI.search method searches by title or author. Every search is limited by search terms. */}\n          {/* Set value as this.state.query. Call searchBook when query changed */}\n          <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.query} onChange={(event) => this.searchBook(event.target.value)} />\n          </div>\n        </div>\n        <div className=\"search-books-bookMatches\">\n          <ol className=\"books-grid\">\n          { /* Send book and key as props to the Book component (As mentioned use key for list items and give unique identify) */}\n          { this.state.searchResults.map((book) => <Book changeShelf={this.changeShelf} book={book} key={book.id} />) }\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// named export\nexport default Search;\n","import React from 'react'\nimport './App.css'\n\n// Import react-router-dom\nimport { Route } from 'react-router-dom'\n\n// Import the home component\nimport Home from './components/Home';\n\n// Import the search component\nimport Search from './components/Search';\n\n// Component BooksApp\nclass BooksApp extends React.Component {\n  render() {\n    return (\n      //Use 'exact' path for exactly same url\n      <div>\n        <Route exact path=\"/\" component={ Home } />\n        <Route exact path=\"/search\" component={ Search } />\n      </div>\n    );\n  }\n}\n\n// named export\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n// API: AIzaSyA30Pb78xnodEbT1Wc7_vwz7KttY0aGL0E\n\n// Import react-router-dom\nimport { BrowserRouter } from 'react-router-dom'\n\n// Wrap browserrouter around the App component to allow Route components\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}